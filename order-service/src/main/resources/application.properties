spring.application.name=order-service
server.port=0

info.app.name="order-service"
info.app.description="Order Service Application"
info.app.version="1.0.0"

eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.region=default
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

eureka.instance.instance-id=order-service:${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.registry-fetch-interval-seconds=5


management.endpoints.web.exposure.include=info,health,shutdown
management.endpoint.shutdown.enabled=true
management.info.env.enabled=true

spring.cloud.compatibility-verifier.enabled=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql:3306/enterprise_modelling
spring.datasource.username=root
spring.datasource.password=Password123@@

#Hibernate Configuration
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#spring.cloud.stream.bindings.order-placed.destination=product-service
#spring.cloud.function.definition=productQuantityUpdateResponse
#spring.cloud.stream.bindings.productQuantityUpdateResponse-in-0.destination=product-quantity-updated-topic
#spring.cloud.stream.bindings.productQuantityUpdateResponse-in-0.group=product-quantity-updated-response-group
#spring.cloud.stream.kafka.binder.brokers = localhost:9092
